[General]
network = Network
sim-time-limit = ${simtime=600}s
#repeat = 30

**.networkConfiguratorModule = ""
**.server.ppp[*].numInputHooks = 1
**.server.ppp[*].inputHook[0].typename = "ThruputMeter"
**.server.ppp[*].inputHook[0].maxInterval = 1s
**.server.ppp[*].inputHook[0].batchSize = 10000
**.server.ppp[*].inputHook[0].**.vector-recording = true

**.server.ppp[*].numOutputHooks = 1
**.server.ppp[*].outputHook[0].typename = "ThruputMeter"
**.server.ppp[*].outputHook[0].maxInterval = 1s
**.server.ppp[*].outputHook[0].batchSize = 10000
**.server.ppp[*].outputHook[0].**.vector-recording = true

**.routerNets[*].clientNets[*].clients[0].ppp[*].numInputHooks = 1
**.routerNets[*].clientNets[*].clients[0].ppp[*].inputHook[0].typename = "ThruputMeter"
**.routerNets[*].clientNets[*].clients[0].ppp[*].inputHook[0].maxInterval = 1s
**.routerNets[*].clientNets[*].clients[0].ppp[*].inputHook[0].batchSize = 10000
**.routerNets[*].clientNets[*].clients[0].ppp[*].inputHook[0].**.vector-recording = true

**.routerNets[*].clientNets[*].clients[0].ppp[*].numOutputHooks = 1
**.routerNets[*].clientNets[*].clients[0].ppp[*].outputHook[0].typename = "ThruputMeter"
**.routerNets[*].clientNets[*].clients[0].ppp[*].outputHook[0].maxInterval = 1s
**.routerNets[*].clientNets[*].clients[0].ppp[*].outputHook[0].batchSize = 10000
**.routerNets[*].clientNets[*].clients[0].ppp[*].outputHook[0].**.vector-recording = true



**.vector-recording = false

**.tcp.mss = 1000

# Client settings
**.clients[*].numTcpApps = 1
**.clients[*].tcpType = "TCP"
**.clients[*].tcpApp[0].typename = "TCPBasicClientApp"
**.clients[*].tcp.tcpAlgorithmClass = "TCPNewReno"
**.clients[*].tcpApp[0].connectAddress = "server"
**.clients[*].tcpApp[0].connectPort = 1000
**.clients[*].tcpApp[0].numRequestsPerSession = 10
**.clients[*].tcpApp[0].thinkTime = exponential(30s)
**.clients[*].tcpApp[0].idleInterval = exponential(600s) # wait time to next session
**.clients[*].tcpApp[0].replyLength = exponential(150000B)
**.clients[*].tcpApp[0].startTime = exponential(600s)

**.routerNets[*].clientNets[*].clients[0].numUdpApps = 1
**.routerNets[*].clientNets[*].clients[0].udpApp[0].typename = "VoIPApp"
**.routerNets[*].clientNets[*].clients[0].udpApp[0].messageLength = 52B # 32 Byte payload, 20 Byte RTP header
**.routerNets[*].clientNets[*].clients[0].udpApp[0].sendInterval = 0.02s
#**.clients[*].udpApp[0].startTime = exponential(3600s)
#**.clients[*].udpApp[0].stopTime = exponential(60s)
**.routerNets[*].clientNets[*].clients[0].udpApp[0].destPort = 2000
**.routerNets[*].clientNets[*].clients[0].udpApp[0].destAddresses = "server"
**.routerNets[*].clientNets[*].clients[0].udpApp[0].localPort = 2000


#pairing different clients for VoIP setting
**.routerNets[0].clientNets[0].clients[0].udpApp[0].destAddresses = "clients[5]"
**.routerNets[0].clientNets[0].clients[5].udpApp[0].destAddresses = "cleints[0]"

**.routerNets[0].clientNets[0].clients[20].udpApp[0].destAddresses = "cleints[130]"
**.routerNets[1].clientNets[1].clients[130].udpApp[0].destAddresses = "cleints[20]"










**.server.numTcpApps = 1
**.server.tcpType = "TCP"
**.server.tcpApp[0].typename = "TCPGenericSrvApp"
**.server.tcpApp[0].localPort = 1000

**.server.numUdpApps = 1
**.server.udpApp[0].typename = "UDPEchoApp"
**.server.udpApp[0].localPort = 2000

# tcp settings
**.tcpApp[*].dataTransferMode = "object"

**.router.ppp[*].queueType = "DropTailQueue" # in routers
**.router.ppp[*].queue.frameCapacity = 40  # in routers

Network.h = 5
Network.routerNets[*].h = 5
Network.routerNets[*].clientNets[*].h = 25
